# Openshift artifactory ha
# Requires one custom init container
# to resolve the user id perm issue with redhat
artifactory-ha:
  initContainerImage: registry.redhat.io/ubi8-minimal
  waitForDatabase: false
  artifactory:
    ## Add custom init containers execution before predefined init containers
    customInitContainersBegin: |
      - name: "redhat-custom-setup"
        #image: "{{ .Values.initContainerImage }}"
        image: {{ index .Values "initContainerImage" }}
        imagePullPolicy: "{{ .Values.artifactory.image.pullPolicy }}"
        command:
          - 'sh'
          - '-c'
          - 'chown -R 1030:1030 {{ .Values.artifactory.persistence.mountPath }}'
        securityContext:
            runAsUser: 0
        volumeMounts:
          - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
            name: volume
    ## Change to use RH UBI images
    image:
      repository: "image-registry.openshift-image-registry.svc:5000/jfrog-artifactory/artifactory-pro"
    node:
      waitForPrimaryStartup:
        enabled: false
  nginx:
    image:
      repository: "image-registry.openshift-image-registry.svc:5000/jfrog-artifactory/nginx-artifactory-pro"
    http:
      externalPort: 80
      internalPort: 8080
    https:
      externalPort: 443
      internalPort: 8443
    mainConf: |
      # Main Nginx configuration file
      worker_processes  4;
      error_log  {{ .Values.nginx.persistence.mountPath }}/logs//error.log warn;
      pid        /tmp/nginx.pid;
      events {
        worker_connections  1024;
      }
      http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        variables_hash_max_size 1024;
        variables_hash_bucket_size 64;
        server_names_hash_max_size 4096;
        server_names_hash_bucket_size 128;
        types_hash_max_size 2048;
        types_hash_bucket_size 64;
        proxy_read_timeout 2400s;
        client_header_timeout 2400s;
        client_body_timeout 2400s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 2400s;
        proxy_buffer_size 32k;
        proxy_buffers 40 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 250m;
        proxy_http_version 1.1;
        client_body_buffer_size 128k;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
        log_format timing 'ip = $remote_addr '
        'user = \"$remote_user\" '
        'local_time = \"$time_local\" '
        'host = $host '
        'request = \"$request\" '
        'status = $status '
        'bytes = $body_bytes_sent '
        'upstream = \"$upstream_addr\" '
        'upstream_time = $upstream_response_time '
        'request_time = $request_time '
        'referer = \"$http_referer\" '
        'UA = \"$http_user_agent\"';
        access_log  {{ .Values.nginx.persistence.mountPath }}/logs/access.log  timing;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        #gzip  on;
        include {{ .Values.nginx.persistence.mountPath }}/conf.d/*.conf;
      }
