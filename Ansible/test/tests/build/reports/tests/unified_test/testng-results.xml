<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="105" passed="99" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[- Health check. Service "jfac@01eb4sc7vmyn3y1958z2jp16t6" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
    </line>
    <line>
      <![CDATA[- Health check. Service "jffe@000" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
    </line>
    <line>
      <![CDATA[- Health check. Service "jfmd@01eb4scm5ggcgsx207xjtr181p" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
    </line>
    <line>
      <![CDATA[- Health check. Service "jfrt@01eb4scnq0vk430wzk9v2f1syf" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
    </line>
    <line>
      <![CDATA[- Ping test. Service is OK]]>
    </line>
    <line>
      <![CDATA[- Delete sample HA repositories. All repositories were successfully deleted]]>
    </line>
    <line>
      <![CDATA[- Create repositories for HA distribution. Successfully created]]>
    </line>
    <line>
      <![CDATA[- Verify HA repos were created. 84 repositories were created]]>
    </line>
    <line>
      <![CDATA[- Delete HA repositories. All repositories were successfully deleted]]>
    </line>
    <line>
      <![CDATA[- Verify repo were deleted. 0 repositories remain]]>
    </line>
    <line>
      <![CDATA[- Re-create repositories for HA distribution. Successfully created]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser0 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser1 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser2 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser3 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser4 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser5 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser6 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser7 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser8 created successfully]]>
    </line>
    <line>
      <![CDATA[- Create users. User testuser9 created successfully]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser0 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser1 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser2 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser3 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser4 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser5 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser6 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser7 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser8 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Verify created users. User testuser9 was successfully verified]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser0 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser1 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser2 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser3 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser4 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser5 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser6 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser7 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser8 created successfully]]>
    </line>
    <line>
      <![CDATA[- Generate API keys. Key for testuser9 created successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser0 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser1 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser2 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser3 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser4 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser5 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser6 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser7 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser8 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Re-generate API keys. Key for testuser9 re-generated successfully]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-0 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-1 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-2 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-3 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-4 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-5 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-6 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-7 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-8 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create group. Group test-group-9 was successfully created]]>
    </line>
    <line>
      <![CDATA[- Create permissions. Permissions successfully created and verified]]>
    </line>
    <line>
      <![CDATA[- Delete permissions. User testPermission has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser0 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser1 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser2 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser3 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser4 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser5 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser6 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser7 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser8 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete user. User testuser9 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-0 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-1 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-2 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-3 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-4 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-5 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-6 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-7 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-8 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Delete group. Group test-group-9 has been removed successfully]]>
    </line>
    <line>
      <![CDATA[- Create issue event. Issue event with ID XRAY-4206031 created and verified successfully]]>
    </line>
    <line>
      <![CDATA[- Update issue event. Issue event with ID XRAY-4206031 updated and verified successfully]]>
    </line>
    <line>
      <![CDATA[- Create policy. Policy with name security_policy_4206031 created and verified successfully]]>
    </line>
    <line>
      <![CDATA[- Update policy. Policy with name security_policy_4206031 updated and verified successfully]]>
    </line>
    <line>
      <![CDATA[- Get policies. Policies list is returned successfully. Policies returned: [security_policy_4206031]]]>
    </line>
    <line>
      <![CDATA[- Create watch. Watch with name all-repositories_4206031 has been created and verified successfully]]>
    </line>
    <line>
      <![CDATA[- Update watch. Watch with name all-repositories_4206031 has been updated and verified successfully]]>
    </line>
    <line>
      <![CDATA[- Assign policy to watch. Policy assigned successfully to Watch]]>
    </line>
    <line>
      <![CDATA[- Delete watch. Watch all-repositories_4206031 has been successfully deleted]]>
    </line>
    <line>
      <![CDATA[- Delete policy. Policy security_policy_4206031 has been successfully deleted]]>
    </line>
    <line>
      <![CDATA[- Integration configuration. Configuration for vendor vendor_4206031 has been successfully added and verified]]>
    </line>
    <line>
      <![CDATA[- Enable TLS for RabbitMQ. TLS for RabbitMQ has been successfully enabled and verified]]>
    </line>
    <line>
      <![CDATA[- Get binary manager. Binary manager is verified, connected RT version: 7.4.1]]>
    </line>
    <line>
      <![CDATA[- Get repo indexing configuration.]]>
    </line>
    <line>
      <![CDATA[- Update repo indexing configuration. Successfully updated]]>
    </line>
    <line>
      <![CDATA[- Create support bundle. Created with a bug, localhost instead of the hostname]]>
    </line>
    <line>
      <![CDATA[- Get system monitoring status. Data returned successfully]]>
    </line>
    <line>
      <![CDATA[- Get system monitoring status. Data returned successfully]]>
    </line>
    <line>
      <![CDATA[- Get X-ray version. Version: 3.3.0, revision: 3980dcb]]>
    </line>
  </reporter-output>
  <suite started-at="2020-06-18T22:54:18Z" name="All API tests" finished-at="2020-06-18T22:55:55Z" duration-ms="96735">
    <groups>
      <group name="common">
        <method signature="HealthCheckTest.healthCheckTest()[pri:0, instance:tests.HealthCheckTest@483dde3c]" name="healthCheckTest" class="tests.HealthCheckTest"/>
        <method signature="HealthCheckTest.pingTest()[pri:1, instance:tests.HealthCheckTest@483dde3c]" name="pingTest" class="tests.HealthCheckTest"/>
      </group> <!-- common -->
      <group name="ping">
        <method signature="HealthCheckTest.pingTest()[pri:1, instance:tests.HealthCheckTest@483dde3c]" name="pingTest" class="tests.HealthCheckTest"/>
      </group> <!-- ping -->
      <group name="xray">
        <method signature="XrayTest.createIssueEventTest(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.XrayTest@53d7d172]" name="createIssueEventTest" class="tests.XrayTest"/>
        <method signature="XrayTest.createPolicyTest()[pri:3, instance:tests.XrayTest@53d7d172]" name="createPolicyTest" class="tests.XrayTest"/>
        <method signature="XrayTest.createWatchTest()[pri:5, instance:tests.XrayTest@53d7d172]" name="createWatchTest" class="tests.XrayTest"/>
        <method signature="XrayTest.deletePolicyTest()[pri:9, instance:tests.XrayTest@53d7d172]" name="deletePolicyTest" class="tests.XrayTest"/>
        <method signature="XrayTest.deleteWatchTest()[pri:8, instance:tests.XrayTest@53d7d172]" name="deleteWatchTest" class="tests.XrayTest"/>
        <method signature="XrayTest.getBinaryManagerTest()[pri:13, instance:tests.XrayTest@53d7d172]" name="getBinaryManagerTest" class="tests.XrayTest"/>
        <method signature="XrayTest.integrationConfigurationTest()[pri:11, instance:tests.XrayTest@53d7d172]" name="integrationConfigurationTest" class="tests.XrayTest"/>
        <method signature="XrayTest.updateIndexingConfigurationTest()[pri:15, instance:tests.XrayTest@53d7d172]" name="updateIndexingConfigurationTest" class="tests.XrayTest"/>
        <method signature="XrayTest.updateIssueEventTest(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.XrayTest@53d7d172]" name="updateIssueEventTest" class="tests.XrayTest"/>
        <method signature="XrayTest.updatePolicyTest()[pri:4, instance:tests.XrayTest@53d7d172]" name="updatePolicyTest" class="tests.XrayTest"/>
        <method signature="XrayTest.updateWatchTest()[pri:6, instance:tests.XrayTest@53d7d172]" name="updateWatchTest" class="tests.XrayTest"/>
        <method signature="XrayTest.xrayGetVersionTest()[pri:20, instance:tests.XrayTest@53d7d172]" name="xrayGetVersionTest" class="tests.XrayTest"/>
        <method signature="XrayTest.xrayPingRequestTest()[pri:19, instance:tests.XrayTest@53d7d172]" name="xrayPingRequestTest" class="tests.XrayTest"/>
        <method signature="XrayTest.assignPolicyToWatchTest()[pri:7, instance:tests.XrayTest@53d7d172]" name="assignPolicyToWatchTest" class="tests.XrayTest"/>
        <method signature="XrayTest.createSupportBundleTest()[pri:17, instance:tests.XrayTest@53d7d172]" name="createSupportBundleTest" class="tests.XrayTest"/>
        <method signature="XrayTest.enableTLSRabbitMQTest()[pri:12, instance:tests.XrayTest@53d7d172]" name="enableTLSRabbitMQTest" class="tests.XrayTest"/>
        <method signature="XrayTest.getIndexingConfigurationTest()[pri:14, instance:tests.XrayTest@53d7d172]" name="getIndexingConfigurationTest" class="tests.XrayTest"/>
        <method signature="XrayTest.getPoliciesTest()[pri:4, instance:tests.XrayTest@53d7d172]" name="getPoliciesTest" class="tests.XrayTest"/>
        <method signature="XrayTest.getSystemMonitoringTest()[pri:18, instance:tests.XrayTest@53d7d172]" name="getSystemMonitoringTest" class="tests.XrayTest"/>
      </group> <!-- xray -->
      <group name="pro">
        <method signature="RepositoryTest.checkDefaultHAReposTest()[pri:3, instance:tests.RepositoryTest@4f17d179]" name="checkDefaultHAReposTest" class="tests.RepositoryTest"/>
        <method signature="RepositoryTest.checkReposAreDeleted()[pri:10, instance:tests.RepositoryTest@4f17d179]" name="checkReposAreDeleted" class="tests.RepositoryTest"/>
        <method signature="RepositoryTest.createDefaultHAReposTest()[pri:2, instance:tests.RepositoryTest@4f17d179]" name="createDefaultHAReposTest" class="tests.RepositoryTest"/>
        <method signature="RepositoryTest.deleteDefaultReposTest()[pri:9, instance:tests.RepositoryTest@4f17d179]" name="deleteDefaultReposTest" class="tests.RepositoryTest"/>
        <method signature="RepositoryTest.deleteReposTest()[pri:1, instance:tests.RepositoryTest@4f17d179]" name="deleteReposTest" class="tests.RepositoryTest"/>
        <method signature="RepositoryTest.reCreateDefaultHAReposTest()[pri:11, instance:tests.RepositoryTest@4f17d179]" name="reCreateDefaultHAReposTest" class="tests.RepositoryTest"/>
        <method signature="SecurityTest.createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" name="createGroupTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.createPermissionsTest()[pri:6, instance:tests.SecurityTest@285aa2f9]" name="createPermissionsTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" name="createUsersTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" name="deleteGroupTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.deletePermissionsTest()[pri:7, instance:tests.SecurityTest@285aa2f9]" name="deletePermissionsTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" name="deleteUserTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" name="generateAPIKeysTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" name="regenerateAPIKeysTest" class="tests.SecurityTest"/>
        <method signature="SecurityTest.verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" name="verifyUsersTest" class="tests.SecurityTest"/>
      </group> <!-- pro -->
    </groups>
    <test started-at="2020-06-18T22:54:18Z" name="tests.HealthCheckTest" finished-at="2020-06-18T22:54:19Z" duration-ms="1490">
      <class name="tests.HealthCheckTest">
        <test-method signature="healthCheckTest()[pri:0, instance:tests.HealthCheckTest@483dde3c]" started-at="2020-06-18T22:54:18Z" name="healthCheckTest" finished-at="2020-06-18T22:54:19Z" duration-ms="1254" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Health check. Service "jfac@01eb4sc7vmyn3y1958z2jp16t6" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
            </line>
            <line>
              <![CDATA[- Health check. Service "jffe@000" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
            </line>
            <line>
              <![CDATA[- Health check. Service "jfmd@01eb4scm5ggcgsx207xjtr181p" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
            </line>
            <line>
              <![CDATA[- Health check. Service "jfrt@01eb4scnq0vk430wzk9v2f1syf" on node "79bb5ca64ee44569aaac94846a7258d2" is healthy]]>
            </line>
          </reporter-output>
        </test-method> <!-- healthCheckTest -->
        <test-method signature="pingTest()[pri:1, instance:tests.HealthCheckTest@483dde3c]" started-at="2020-06-18T22:54:19Z" name="pingTest" finished-at="2020-06-18T22:54:19Z" duration-ms="227" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Ping test. Service is OK]]>
            </line>
          </reporter-output>
        </test-method> <!-- pingTest -->
      </class> <!-- tests.HealthCheckTest -->
    </test> <!-- tests.HealthCheckTest -->
    <test started-at="2020-06-18T22:54:19Z" name="tests.RepositoryTest" finished-at="2020-06-18T22:55:12Z" duration-ms="52678">
      <class name="tests.RepositoryTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RepositoryTest@4f17d179]" started-at="2020-06-18T22:54:19Z" name="setUp" finished-at="2020-06-18T22:54:19Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="deleteReposTest()[pri:1, instance:tests.RepositoryTest@4f17d179]" started-at="2020-06-18T22:54:19Z" name="deleteReposTest" finished-at="2020-06-18T22:54:21Z" duration-ms="1476" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Delete sample HA repositories. All repositories were successfully deleted]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteReposTest -->
        <test-method signature="createDefaultHAReposTest()[pri:2, instance:tests.RepositoryTest@4f17d179]" started-at="2020-06-18T22:54:21Z" name="createDefaultHAReposTest" finished-at="2020-06-18T22:54:24Z" duration-ms="3271" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Create repositories for HA distribution. Successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createDefaultHAReposTest -->
        <test-method signature="checkDefaultHAReposTest()[pri:3, instance:tests.RepositoryTest@4f17d179]" started-at="2020-06-18T22:54:24Z" name="checkDefaultHAReposTest" finished-at="2020-06-18T22:54:25Z" duration-ms="488" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Verify HA repos were created. 84 repositories were created]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkDefaultHAReposTest -->
        <test-method signature="deleteDefaultReposTest()[pri:9, instance:tests.RepositoryTest@4f17d179]" started-at="2020-06-18T22:54:25Z" name="deleteDefaultReposTest" finished-at="2020-06-18T22:55:09Z" duration-ms="44317" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Delete HA repositories. All repositories were successfully deleted]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteDefaultReposTest -->
        <test-method signature="checkReposAreDeleted()[pri:10, instance:tests.RepositoryTest@4f17d179]" started-at="2020-06-18T22:55:09Z" name="checkReposAreDeleted" finished-at="2020-06-18T22:55:09Z" duration-ms="239" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Verify repo were deleted. 0 repositories remain]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkReposAreDeleted -->
        <test-method signature="reCreateDefaultHAReposTest()[pri:11, instance:tests.RepositoryTest@4f17d179]" started-at="2020-06-18T22:55:09Z" name="reCreateDefaultHAReposTest" finished-at="2020-06-18T22:55:12Z" duration-ms="2884" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Re-create repositories for HA distribution. Successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- reCreateDefaultHAReposTest -->
      </class> <!-- tests.RepositoryTest -->
    </test> <!-- tests.RepositoryTest -->
    <test started-at="2020-06-18T22:55:12Z" name="tests.SecurityTest" finished-at="2020-06-18T22:55:44Z" duration-ms="31896">
      <class name="tests.SecurityTest">
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:12Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:13Z" duration-ms="480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email0@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser0 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:13Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:13Z" duration-ms="467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email1@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser1 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:13Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:14Z" duration-ms="498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email2@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser2 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:14Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:14Z" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email3@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser3 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:14Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:14Z" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email4@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser4 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:14Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:15Z" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email5@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser5 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:15Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:15Z" duration-ms="419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email6@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser6 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:15Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:16Z" duration-ms="405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email7@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser7 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:16Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:16Z" duration-ms="417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email8@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser8 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="createUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:16Z" name="createUsersTest" data-provider="users" finished-at="2020-06-18T22:55:16Z" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email9@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create users. User testuser9 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:16Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:17Z" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email0@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser0 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:17Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:17Z" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email1@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser1 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:17Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:17Z" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email2@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser2 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:17Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:18Z" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email3@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser3 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:18Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:18Z" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email4@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser4 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:18Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:18Z" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email5@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser5 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:18Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:19Z" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email6@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser6 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:19Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:19Z" duration-ms="394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email7@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser7 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:19Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:20Z" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email8@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser8 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="verifyUsersTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:20Z" name="verifyUsersTest" data-provider="users" finished-at="2020-06-18T22:55:20Z" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email9@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Verify created users. User testuser9 was successfully verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyUsersTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:20Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:21Z" duration-ms="816" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email0@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser0 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:21Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:21Z" duration-ms="543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email1@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser1 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:21Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:22Z" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email2@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser2 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:22Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:22Z" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email3@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser3 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:22Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:23Z" duration-ms="448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email4@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser4 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:23Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:23Z" duration-ms="457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email5@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser5 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:23Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:23Z" duration-ms="442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email6@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser6 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:23Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:24Z" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email7@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser7 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:24Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:24Z" duration-ms="467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email8@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser8 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="generateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:3, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:24Z" name="generateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:25Z" duration-ms="479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email9@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Generate API keys. Key for testuser9 created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- generateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:25Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:25Z" duration-ms="473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email0@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser0 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:25Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:26Z" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email1@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser1 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:26Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:26Z" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email2@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser2 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:26Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:27Z" duration-ms="474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email3@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser3 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:27Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:27Z" duration-ms="450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email4@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser4 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:27Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:28Z" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email5@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser5 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:28Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:28Z" duration-ms="479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email6@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser6 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:28Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:29Z" duration-ms="450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email7@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser7 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:29Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:29Z" duration-ms="448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email8@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser8 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="regenerateAPIKeysTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:4, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:29Z" name="regenerateAPIKeysTest" data-provider="users" finished-at="2020-06-18T22:55:29Z" duration-ms="457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email9@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Re-generate API keys. Key for testuser9 re-generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- regenerateAPIKeysTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:29Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:30Z" duration-ms="599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-0 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:30Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:31Z" duration-ms="620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-1 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:31Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:31Z" duration-ms="629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-2 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:31Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:32Z" duration-ms="617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-3 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:32Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:33Z" duration-ms="634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-4 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:33Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:33Z" duration-ms="614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-5 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:33Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:34Z" duration-ms="654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-6]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-6 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:34Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:35Z" duration-ms="656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-7]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-7 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:35Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:35Z" duration-ms="647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-8 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createGroupTest(java.lang.Object)[pri:5, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:35Z" name="createGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:36Z" duration-ms="629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create group. Group test-group-9 was successfully created]]>
            </line>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method signature="createPermissionsTest()[pri:6, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:36Z" name="createPermissionsTest" finished-at="2020-06-18T22:55:37Z" duration-ms="912" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Create permissions. Permissions successfully created and verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- createPermissionsTest -->
        <test-method signature="deletePermissionsTest()[pri:7, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:37Z" name="deletePermissionsTest" finished-at="2020-06-18T22:55:37Z" duration-ms="375" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Delete permissions. User testPermission has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deletePermissionsTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:37Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:37Z" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email0@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser0 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:37Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:38Z" duration-ms="347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email1@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser1 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:38Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:38Z" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email2@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser2 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:38Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:39Z" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email3@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser3 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:39Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:39Z" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email4@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser4 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:39Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:39Z" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email5@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser5 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:39Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:40Z" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email6@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser6 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:40Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:40Z" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email7@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser7 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:40Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:40Z" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email8@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser8 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteUserTest(java.lang.Object, java.lang.Object, java.lang.Object)[pri:8, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:40Z" name="deleteUserTest" data-provider="users" finished-at="2020-06-18T22:55:41Z" duration-ms="334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email9@jfrog.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete user. User testuser9 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:41Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:41Z" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-0 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:41Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:41Z" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-1 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:41Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:42Z" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-2 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:42Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:42Z" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-3 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:42Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:42Z" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-4 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:42Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:43Z" duration-ms="333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-5 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:43Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:43Z" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-6]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-6 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:43Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:43Z" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-7]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-7 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:43Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:44Z" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-8 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
        <test-method signature="deleteGroupTest(java.lang.Object)[pri:9, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:55:44Z" name="deleteGroupTest" data-provider="groups" finished-at="2020-06-18T22:55:44Z" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test-group-9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Delete group. Group test-group-9 has been removed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteGroupTest -->
      </class> <!-- tests.SecurityTest -->
    </test> <!-- tests.SecurityTest -->
    <test started-at="2020-06-18T22:55:44Z" name="tests.XrayTest" finished-at="2020-06-18T22:55:55Z" duration-ms="10620">
      <class name="tests.HealthCheckTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.HealthCheckTest@483dde3c]" started-at="2020-06-18T22:54:18Z" name="setUp" finished-at="2020-06-18T22:54:18Z" duration-ms="92" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SecurityTest@285aa2f9]" started-at="2020-06-18T22:54:18Z" name="setUp" finished-at="2020-06-18T22:54:18Z" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:54:18Z" name="setUp" finished-at="2020-06-18T22:54:18Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- tests.HealthCheckTest -->
      <class name="tests.XrayTest">
        <test-method is-config="true" signature="testSetUp()[pri:0, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:44Z" name="testSetUp" finished-at="2020-06-18T22:55:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method signature="createIssueEventTest(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)[pri:1, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:44Z" name="createIssueEventTest" data-provider="issueEvents" finished-at="2020-06-18T22:55:45Z" duration-ms="622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XRAY-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CVE-2017-2000386]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[A very important custom issue]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[A very important custom issue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Create issue event. Issue event with ID XRAY-4206031 created and verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createIssueEventTest -->
        <test-method signature="updateIssueEventTest(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)[pri:2, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:45Z" name="updateIssueEventTest" data-provider="issueEvents" finished-at="2020-06-18T22:55:45Z" depends-on-methods="tests.XrayTest.createIssueEventTest" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XRAY-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CVE-2017-2000386]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[A very important custom issue]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[A very important custom issue]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[- Update issue event. Issue event with ID XRAY-4206031 updated and verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- updateIssueEventTest -->
        <test-method signature="createPolicyTest()[pri:3, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:45Z" name="createPolicyTest" finished-at="2020-06-18T22:55:46Z" duration-ms="389" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Create policy. Policy with name security_policy_4206031 created and verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createPolicyTest -->
        <test-method signature="updatePolicyTest()[pri:4, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:46Z" name="updatePolicyTest" finished-at="2020-06-18T22:55:46Z" depends-on-methods="tests.XrayTest.createPolicyTest" duration-ms="398" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Update policy. Policy with name security_policy_4206031 updated and verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- updatePolicyTest -->
        <test-method signature="getPoliciesTest()[pri:4, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:46Z" name="getPoliciesTest" finished-at="2020-06-18T22:55:46Z" duration-ms="243" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Get policies. Policies list is returned successfully. Policies returned: [security_policy_4206031]]]>
            </line>
          </reporter-output>
        </test-method> <!-- getPoliciesTest -->
        <test-method signature="createWatchTest()[pri:5, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:46Z" name="createWatchTest" finished-at="2020-06-18T22:55:47Z" depends-on-methods="tests.XrayTest.createPolicyTest" duration-ms="455" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Create watch. Watch with name all-repositories_4206031 has been created and verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- createWatchTest -->
        <test-method signature="updateWatchTest()[pri:6, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:47Z" name="updateWatchTest" finished-at="2020-06-18T22:55:47Z" depends-on-methods="tests.XrayTest.createWatchTest" duration-ms="465" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Update watch. Watch with name all-repositories_4206031 has been updated and verified successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- updateWatchTest -->
        <test-method signature="assignPolicyToWatchTest()[pri:7, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:47Z" name="assignPolicyToWatchTest" finished-at="2020-06-18T22:55:47Z" duration-ms="240" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Assign policy to watch. Policy assigned successfully to Watch]]>
            </line>
          </reporter-output>
        </test-method> <!-- assignPolicyToWatchTest -->
        <test-method signature="deleteWatchTest()[pri:8, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:47Z" name="deleteWatchTest" finished-at="2020-06-18T22:55:48Z" duration-ms="253" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Delete watch. Watch all-repositories_4206031 has been successfully deleted]]>
            </line>
          </reporter-output>
        </test-method> <!-- deleteWatchTest -->
        <test-method signature="deletePolicyTest()[pri:9, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:48Z" name="deletePolicyTest" finished-at="2020-06-18T22:55:48Z" duration-ms="228" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Delete policy. Policy security_policy_4206031 has been successfully deleted]]>
            </line>
          </reporter-output>
        </test-method> <!-- deletePolicyTest -->
        <test-method signature="integrationConfigurationTest()[pri:11, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:48Z" name="integrationConfigurationTest" finished-at="2020-06-18T22:55:48Z" duration-ms="403" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Integration configuration. Configuration for vendor vendor_4206031 has been successfully added and verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- integrationConfigurationTest -->
        <test-method signature="enableTLSRabbitMQTest()[pri:12, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:48Z" name="enableTLSRabbitMQTest" finished-at="2020-06-18T22:55:49Z" duration-ms="422" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Enable TLS for RabbitMQ. TLS for RabbitMQ has been successfully enabled and verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- enableTLSRabbitMQTest -->
        <test-method signature="getBinaryManagerTest()[pri:13, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:49Z" name="getBinaryManagerTest" finished-at="2020-06-18T22:55:49Z" duration-ms="241" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Get binary manager. Binary manager is verified, connected RT version: 7.4.1]]>
            </line>
          </reporter-output>
        </test-method> <!-- getBinaryManagerTest -->
        <test-method signature="getIndexingConfigurationTest()[pri:14, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:49Z" name="getIndexingConfigurationTest" finished-at="2020-06-18T22:55:49Z" duration-ms="270" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Get repo indexing configuration.]]>
            </line>
          </reporter-output>
        </test-method> <!-- getIndexingConfigurationTest -->
        <test-method signature="updateIndexingConfigurationTest()[pri:15, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:49Z" name="updateIndexingConfigurationTest" finished-at="2020-06-18T22:55:50Z" duration-ms="463" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Update repo indexing configuration. Successfully updated]]>
            </line>
          </reporter-output>
        </test-method> <!-- updateIndexingConfigurationTest -->
        <test-method signature="createSupportBundleTest()[pri:17, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:50Z" name="createSupportBundleTest" finished-at="2020-06-18T22:55:54Z" duration-ms="4665" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Create support bundle. Created with a bug, localhost instead of the hostname]]>
            </line>
          </reporter-output>
        </test-method> <!-- createSupportBundleTest -->
        <test-method signature="getSystemMonitoringTest()[pri:18, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:54Z" name="getSystemMonitoringTest" finished-at="2020-06-18T22:55:54Z" duration-ms="179" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Get system monitoring status. Data returned successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- getSystemMonitoringTest -->
        <test-method signature="xrayPingRequestTest()[pri:19, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:54Z" name="xrayPingRequestTest" finished-at="2020-06-18T22:55:55Z" duration-ms="115" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Get system monitoring status. Data returned successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- xrayPingRequestTest -->
        <test-method signature="xrayGetVersionTest()[pri:20, instance:tests.XrayTest@53d7d172]" started-at="2020-06-18T22:55:55Z" name="xrayGetVersionTest" finished-at="2020-06-18T22:55:55Z" duration-ms="135" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Get X-ray version. Version: 3.3.0, revision: 3980dcb]]>
            </line>
          </reporter-output>
        </test-method> <!-- xrayGetVersionTest -->
      </class> <!-- tests.XrayTest -->
    </test> <!-- tests.XrayTest -->
  </suite> <!-- All API tests -->
</testng-results>
